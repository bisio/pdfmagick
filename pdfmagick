#!/usr/bin/env python

import argparse 
import os
import re
import sys

TRAILER_BUFFER_SIZE = 1000


def sniff(pdf_path):
    with open(pdf_path) as pdf_file:
        header = pdf_file.read(8)
        if header[0:7] != '%PDF-1.':
            print "{} is not a pdf".format(pdf_path)
            sys.exit(1)
        
        minor_version_number = int(header[7])
        pdf_file.seek(-TRAILER_BUFFER_SIZE,os.SEEK_END)
        buff = pdf_file.read(TRAILER_BUFFER_SIZE)
        location = buff.rfind('startxref')
        buff = buff[location:].replace("\r","\n")
        xref_offset = int(re.search("\n(\d+)\n",buff).group(1))
        pdf_file.seek(xref_offset,0)
        xref_start = pdf_file.read(4)
        if xref_start == 'xref':
            xref_format = '"traditional" xref'
        else:
            xref_format = '"cross-reference streams" xref'
            
        print "PDF-1.{} with {}".format(minor_version_number,xref_format)
    
            

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--sniff','-s',action='store',help='sniff pdf version and xref format')
    
    args = parser.parse_args()
    if args.sniff:
        sniff(args.sniff)
